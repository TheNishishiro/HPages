// <auto-generated />
using System;
using HentaiPages.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HentaiPages.Migrations
{
    [DbContext(typeof(HentaiDbContext))]
    [Migration("20211231192231_tasks")]
    partial class tasks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("HentaiPages.Database.Tables.Image", b =>
                {
                    b.Property<long>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentType")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Data")
                        .HasColumnType("BLOB");

                    b.Property<bool>("Favourite")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ImageId");

                    b.HasIndex("ImageId");

                    b.HasIndex("UploadDate");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("HentaiPages.Database.Tables.Similarity", b =>
                {
                    b.Property<long>("SimilarityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChildImageId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ImageId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("SimilarityScore")
                        .HasColumnType("REAL");

                    b.HasKey("SimilarityId");

                    b.HasIndex("ChildImageId");

                    b.HasIndex("ImageId");

                    b.ToTable("SimilarityScores");
                });

            modelBuilder.Entity("HentaiPages.Database.Tables.Tags", b =>
                {
                    b.Property<int>("TagsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("TagsId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("HentaiPages.Database.Tables.TagsImages", b =>
                {
                    b.Property<long>("ImageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ImageId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("TagsImages");
                });

            modelBuilder.Entity("HentaiPages.Database.Tables.WorkerTask", b =>
                {
                    b.Property<int>("WorkerTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ObjectId2")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RestartOnFailure")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ResultId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResultMessage")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ResultObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("WorkerTaskId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("HentaiPages.Database.Tables.Similarity", b =>
                {
                    b.HasOne("HentaiPages.Database.Tables.Image", null)
                        .WithMany("SimilarityScores")
                        .HasForeignKey("ImageId");
                });

            modelBuilder.Entity("HentaiPages.Database.Tables.TagsImages", b =>
                {
                    b.HasOne("HentaiPages.Database.Tables.Image", "Image")
                        .WithMany("Tags")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HentaiPages.Database.Tables.Tags", "Tag")
                        .WithMany("Images")
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("HentaiPages.Database.Tables.Image", b =>
                {
                    b.Navigation("SimilarityScores");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("HentaiPages.Database.Tables.Tags", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
